Buy A camera from Amazon.com

User can
1) Open url Amazon.com or login App
2) Search Camera
3) Select any particular camera
4) Click on buy now or Add to cart
5) Cancel

Class: User
Data:Camera,order,Address,phone
Behaviour:
if(login.App()){
	App.login(Amazon.com);
}
else{
	Open.urlonBrowser(Amazom.com);
}
SearchCamera(){
 if(Camera.Available() && Buynow){
	Buynow.Camera();
	Select.paymentMethod();
	if(paymentmethod==COD){
		SendAutheticationMessage(phone);
		if (Authorised)
			Select.address(this.address)
			Orderplaced();
		else
			Order.Cancel()		
	}
	else{
		if(CreditCard.cardAvailable()){
		  SendAutheticationMessage(phone);
		  if (Authorised)
			Select.address(this.address)
			Orderplaced();
		   else
			Order.Cancel()	
		}
		else{
		 InsertCarddetails();
		 SendAutheticationMessage(phone);
		  if (Authorised)
			Select.address(this.address)
			Orderplaced();
		   else
			Order.Cancel()
		}
	}
	
 }
 else{
	AddtoCart.Camera();
 }
}
else{
ExitApporURL();
}

------------------------------------------------------------
-----------------------------------------------

Class: Deliveryperson
Data:name,phone,mail,address,sign
Behaviour:
sendNotification('arrival',mail,phone);
orderDelivery(address){
	if (validAddress){
		ItemDelivered();
		VerificationfromReciever(Sign)
		sendNotification('delivered',mail,phone);
	}
	else{
	       OrderReturned();
	       sendNotification('failedorder',mail,phone);
		
	}
}


sendNotification(msg,mail,phone){
	if(msg=='arrival')
		System.out.Println("Order is going to arrive at xyz date");
	}
	if(msg=='delivered'){
		System.out.Println("Order Delivered");
	}
	if(msg=='failed'){
		System.out.Println("Failed to deliever order");
	}
}
